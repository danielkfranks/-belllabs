# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
    
  - name: Cloudflare Pages GitHub Action
  # You may pin to the exact commit or the version.
  # uses: cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca
  uses: cloudflare/pages-action@v1.5.0
  with:
    # Cloudflare API Token
    apiToken: 
    # Cloudflare Account ID
    accountId: 1b44092368a82ebafc4a45aeed84149f
    # The name of the Pages project to upload to
    projectName: 
    # The directory of static assets to upload
    directory: 
    # GitHub Token
    gitHubToken: # optional
    # The name of the branch you want to deploy to
    branch: # optional
    # The working directory in which to run Wrangler
    workingDirectory: # optional
    # The version of Wrangler to use
    wranglerVersion: # optional, default is 2
          
        
